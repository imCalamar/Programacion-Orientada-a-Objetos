Object subclass: #Cliente	instanceVariableNames: 'nombre razonSocial'	classVariableNames: ''	poolDictionaries: ''	category: 'Tp5ejer7'!!Cliente commentStamp: '<historical>' prior: 0!Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:For the Class part:  State a one line summary. For example, "I represent a paragraph of text".For the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.For the Collaborators Part: State my main collaborators and one line about how I interact with them. Public API and Key Messages- message one   - message two - (for bonus points) how to create instances.   One simple example is simply gorgeous. Internal Representation and Key Implementation Points.    Instance Variables	nombre:		<Object>	razonSocial:		<Object>    Implementation Points!!Cliente methodsFor: 'aplicacion' stamp: 'joaquin 5/28/2019 22:59'!consultarRs:rs|res|res:=false.(rs == razonSocial)ifTrue: [ res:=true ].^res.! !!Cliente methodsFor: 'modificadores' stamp: 'joaquin 5/28/2019 22:51'!inicializarC:unNombre rs:unaRazonsocialnombre := unNombre .razonSocial := unaRazonsocial .! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Cliente class	instanceVariableNames: ''!!Cliente class methodsFor: 'Constructores' stamp: 'joaquin 5/28/2019 22:53'!crear:unNombre con:unaRs|cliente|cliente := Cliente new.cliente inicializarC: unNombre rs: unaRs .^cliente .! !Object subclass: #Electrodomestico	instanceVariableNames: 'valorBase peso consumo marca precioFinal'	classVariableNames: ''	poolDictionaries: ''	category: 'Tp5ejer7'!!Electrodomestico commentStamp: '<historical>' prior: 0!Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:For the Class part:  State a one line summary. For example, "I represent a paragraph of text".For the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.For the Collaborators Part: State my main collaborators and one line about how I interact with them. Public API and Key Messages- message one   - message two - (for bonus points) how to create instances.   One simple example is simply gorgeous. Internal Representation and Key Implementation Points.    Implementation Points!!Electrodomestico methodsFor: 'modificadores' stamp: 'joaquin 5/28/2019 21:45'!inicializar: unValorBase peso: unPeso consumo: letra	valorBase := unValorBase.	peso := unPeso.	consumo := OrderedCollection new.	consumo add: letra.	marca := nil.	precioFinal := nil! !!Electrodomestico methodsFor: 'aplicacion' stamp: 'joaquin 5/28/2019 21:54'!obtenerPrecioPeso: p|res|(p>=0 | p<=19)ifTrue:[res:=150]ifFalse:[	(p>=20 | p<=49)ifTrue:[res:=350]ifFalse:[		(p>=50 | p<=79)ifTrue:[res:=480]ifFalse:[			(p>=80)ifTrue:[res:=150]			]		]	].peso add: res.! !!Electrodomestico methodsFor: 'aplicacion' stamp: 'joaquin 5/28/2019 21:55'!calcularValor|res|res:= valorBase + (consumo at:2) + (peso at:2).^res.! !!Electrodomestico methodsFor: 'aplicacion' stamp: 'joaquin 5/28/2019 21:14'!obtenerConsumo:l|p|(l=='A')ifTrue:[p:=300]ifFalse:[	(l=='B')ifTrue:[p:=230]ifFalse:[		(l=='C')ifTrue:[p:=250]ifFalse:[			(l=='E')ifTrue:[p:=90]ifFalse:[				(l=='F')ifTrue:[p:=70]				]			]		]	].consumo add: p.! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Electrodomestico class	instanceVariableNames: ''!!Electrodomestico class methodsFor: 'Constructores' stamp: 'joaquin 5/28/2019 21:53'!crear: unValorBase conpeso: unPeso conconsumo: unaLetra	| electro |	electro := Electrodomestico new.	electro inicializar: unValorBase peso: unPeso consumo: unaLetra.	electro obtenerConsumo: unaLetra.	electro obtenerPrecioPeso: unPeso .	^ electro! !Object subclass: #Empresa	instanceVariableNames: 'colElectrodomesticos colReservas colClientes'	classVariableNames: ''	poolDictionaries: ''	category: 'Tp5ejer7'!!Empresa commentStamp: '<historical>' prior: 0!Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:For the Class part:  State a one line summary. For example, "I represent a paragraph of text".For the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.For the Collaborators Part: State my main collaborators and one line about how I interact with them. Public API and Key Messages- message one   - message two - (for bonus points) how to create instances.   One simple example is simply gorgeous. Internal Representation and Key Implementation Points.    Instance Variables	colElectrodomesticos:		<Object>    Implementation Points!!Empresa methodsFor: 'modificadores' stamp: 'joaquin 5/28/2019 22:54'!inicializarEmpresa.colElectrodomesticos := OrderedCollection new.colReservas := OrderedCollection new.colClientes := OrderedCollection new.! !!Empresa methodsFor: 'aplicacion' stamp: 'joaquin 5/28/2019 23:04'!registrarReserva:rs y:colElect|reserva |reserva := Reserva new.colClientes do: [ :aux | (aux consultarRs:rs)ifTrue:[(reserva crearReserva:aux  y:colElect) & colClientes add: reserva ]].! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Empresa class	instanceVariableNames: ''!!Empresa class methodsFor: 'Constructores' stamp: 'joaquin 5/28/2019 19:48'!crear|empresa|empresa := Empresa new.empresa inicializarEmpresa .^empresa .! !Electrodomestico subclass: #Lavarropa	instanceVariableNames: 'capacidadCarga tipoCarga sistemaLavado'	classVariableNames: ''	poolDictionaries: ''	category: 'Tp5ejer7'!!Lavarropa commentStamp: '<historical>' prior: 0!Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:For the Class part:  State a one line summary. For example, "I represent a paragraph of text".For the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.For the Collaborators Part: State my main collaborators and one line about how I interact with them. Public API and Key Messages- message one   - message two - (for bonus points) how to create instances.   One simple example is simply gorgeous. Internal Representation and Key Implementation Points.    Instance Variables	capacidadCarga:		<Object>	sistemaLavado:		<Object>	tipoCarga:		<Object>    Implementation Points!!Lavarropa methodsFor: 'aplicacion' stamp: 'joaquin 5/28/2019 21:59'!calcularValor|res|res:= super calcularValor .(capacidadCarga > 30)ifTrue:[res:= res + 350].^res.! !!Lavarropa methodsFor: 'modificadores' stamp: 'joaquin 5/28/2019 21:37'!inicializarL: unValorBase peso: unPeso consumo: unaLetra capacidadCarga: unaCapacidadCarga tipoCarga: unTipoCarga sistemaLavado: unSistemaLavado.super inicializar: unValorBase  peso: unPeso consumo:unaLetra .capacidadCarga := unaCapacidadCarga .tipoCarga := unTipoCarga .sistemaLavado := unSistemaLavado . ! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Lavarropa class	instanceVariableNames: ''!!Lavarropa class methodsFor: 'Constructores' stamp: 'joaquin 5/28/2019 21:55'!crear:unValorBase conpeso: unPeso conconsumo:unaLetra conCapacidadCarga: unaCapacidadCarga contipoCarga:unTipoCarga consistemaLavado: unSistemaLavado|lava|lava:=Lavarropa new.lava inicializarL: unValorBase peso: unPeso consumo: unaLetra capacidadCarga: unaCapacidadCarga tipoCarga: unTipoCarga sistemaLavado: unSistemaLavado.super obtenerConsumo:unaLetra .super obtenerPrecioPeso: unPeso .^lava.! !Object subclass: #Reserva	instanceVariableNames: 'colElectrodomesticos cliente fechaReserva fechaEntrega monto'	classVariableNames: ''	poolDictionaries: ''	category: 'Tp5ejer7'!!Reserva commentStamp: '<historical>' prior: 0!Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:For the Class part:  State a one line summary. For example, "I represent a paragraph of text".For the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.For the Collaborators Part: State my main collaborators and one line about how I interact with them. Public API and Key Messages- message one   - message two - (for bonus points) how to create instances.   One simple example is simply gorgeous. Internal Representation and Key Implementation Points.    Instance Variables	colElectrodomesticos:		<Object>	fechaEntrega:		<Object>	fechaReserva:		<Object>	monto:		<Object>    Implementation Points!!Reserva methodsFor: 'modificadores' stamp: 'joaquin 5/28/2019 22:41'!inicializarReserva:unaColElect cliente: unClientecolElectrodomesticos:= unaColElect .cliente := unCliente .fechaEntrega:=nil.fechaReserva := Date today .monto :=nil.! !!Reserva methodsFor: 'modificadores' stamp: 'joaquin 5/28/2019 22:47'!completarDatos:fechaEcolElectrodomesticos do:[:aux | monto := (monto + aux calcularValor)].fechaEntrega := fechaE .! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Reserva class	instanceVariableNames: ''!!Reserva class methodsFor: 'Constructores' stamp: 'joaquin 5/28/2019 22:41'!crearReserva:unCliente y:colElectro|reserva|reserva := Reserva new.reserva inicializarReserva: colElectro cliente: unCliente .^reserva .! !Electrodomestico subclass: #Television	instanceVariableNames: 'tamaño resolucion hdmi esSmart'	classVariableNames: ''	poolDictionaries: ''	category: 'Tp5ejer7'!!Television commentStamp: '<historical>' prior: 0!Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:For the Class part:  State a one line summary. For example, "I represent a paragraph of text".For the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.For the Collaborators Part: State my main collaborators and one line about how I interact with them. Public API and Key Messages- message one   - message two - (for bonus points) how to create instances.   One simple example is simply gorgeous. Internal Representation and Key Implementation Points.    Instance Variables	esSmart:		<Object>	hdmi:		<Object>	resolucion:		<Object>	tamaño:		<Object>    Implementation Points!!Television methodsFor: 'modificadores' stamp: 'joaquin 5/28/2019 21:31'!inicializarTv:unValorBase peso: unPeso consumo:unaLetra tamaño:unTamaño resolucion:unaResolucion hdmi:unHdmi esSmart:unSmart.super inicializar:unValorBase peso:unPeso consumo:unaLetra.tamaño := unTamaño .resolucion := unaResolucion .hdmi := unHdmi .esSmart := unSmart .! !!Television methodsFor: 'aplicacion' stamp: 'joaquin 5/28/2019 22:03'!calcularValor|res|res := super calcularValor .res:= res + tamaño*(0.3) + hdmi .^res.! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Television class	instanceVariableNames: ''!!Television class methodsFor: 'Constructores' stamp: 'joaquin 5/28/2019 21:55'!crear:unValorBase conpeso: unPeso conconsumo:unaLetra conTamaño: unTamaño conResolucion: unaResolucion conHdmi:unHdmi conSmart: unSmart|tv|tv := Television new.tv inicializarTv:unValorBase peso: unPeso consumo:unaLetra tamaño:unTamaño resolucion:unaResolucion hdmi:unHdmi esSmart:unSmart.super obtenerConsumo: unaLetra .super obtenerPrecioPeso: unPeso .^tv.! !