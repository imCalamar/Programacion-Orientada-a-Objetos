Object subclass: #Prenda	instanceVariableNames: 'tipoPenda tallePrenda textoPrenda'	classVariableNames: ''	poolDictionaries: ''	category: 'TPO2-FAI1629'!!Prenda commentStamp: '<historical>' prior: 0!Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:For the Class part:  State a one line summary. For example, "I represent a paragraph of text".For the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.For the Collaborators Part: State my main collaborators and one line about how I interact with them. Public API and Key Messages- message one   - message two - (for bonus points) how to create instances.   One simple example is simply gorgeous. Internal Representation and Key Implementation Points.    Instance Variables	tallePrenda:		<Object>	textoPrenda:		<Object>	tipoPenda:		<Object>    Implementation Points!!Prenda methodsFor: 'modificadores' stamp: 'joaquin 4/30/2019 18:10'!inicializarPrendaTipo: unTipo talle: unTalle texto: unTextotipoPenda := unTipo .tallePrenda := unTalle .textoPrenda := unTexto .! !!Prenda methodsFor: 'aplicacion' stamp: 'joaquin 5/1/2019 03:03'!compararPrenda: unTipo talle: unTalle texto: unTexto^(unTipo =tipoPenda & unTalle = tallePrenda & unTexto = textoPrenda )ifTrue:[true] ifFalse:[false].! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Prenda class	instanceVariableNames: ''!!Prenda class methodsFor: 'constructores' stamp: 'joaquin 4/30/2019 18:15'!crear: unTipo talle: unTalle y: unTexto|prenda|prenda:= Prenda new.prenda inicializarPrendaTipo: unTipo talle: unTalle texto: unTexto.^prenda.! !Object subclass: #StockCenter	instanceVariableNames: 'colUbicaciones'	classVariableNames: ''	poolDictionaries: ''	category: 'TPO2-FAI1629'!!StockCenter commentStamp: '<historical>' prior: 0!Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:For the Class part:  State a one line summary. For example, "I represent a paragraph of text".For the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.For the Collaborators Part: State my main collaborators and one line about how I interact with them. Public API and Key Messages- message one   - message two - (for bonus points) how to create instances.   One simple example is simply gorgeous. Internal Representation and Key Implementation Points.    Instance Variables	colUbicaciones:		<Object>	ubicacion:		<Object>    Implementation Points!!StockCenter methodsFor: 'modificadores' stamp: 'joaquin 4/30/2019 19:32'!inicializarStockCentencolUbicaciones:= OrderedCollection new.! !!StockCenter methodsFor: 'modificadores' stamp: 'joaquin 4/30/2019 20:53'!agregarUbicacion: unaUbicaioncolUbicaciones add: unaUbicaion .! !!StockCenter methodsFor: 'aplicacion' stamp: 'joaquin 5/1/2019 18:05'!buscarSinStock: unTipo talle: unTalle y: unTexto enTemporada: unaEstacion del: unAno|colAux|colAux := OrderedCollection new.colUbicaciones do: [:unaUbicacion | (unaUbicacion consultar: unTipo talle: unTalle texto: unTexto ano: unAno estacion: unaEstacion)ifFalse:[colAux add: unaUbicacion]].^colAux .! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!StockCenter class	instanceVariableNames: ''!!StockCenter class methodsFor: 'constructores' stamp: 'joaquin 4/30/2019 20:35'!crear|stockCenter|stockCenter := StockCenter new.stockCenter inicializarStockCenten .^stockCenter .! !Object subclass: #Temporada	instanceVariableNames: 'ano estacion colPrendas'	classVariableNames: ''	poolDictionaries: ''	category: 'TPO2-FAI1629'!!Temporada commentStamp: '<historical>' prior: 0!Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:For the Class part:  State a one line summary. For example, "I represent a paragraph of text".For the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.For the Collaborators Part: State my main collaborators and one line about how I interact with them. Public API and Key Messages- message one   - message two - (for bonus points) how to create instances.   One simple example is simply gorgeous. Internal Representation and Key Implementation Points.    Instance Variables	ano:		<Object>	colPrendas:		<Object>	estacion:		<Object>    Implementation Points!!Temporada methodsFor: 'aplicacion' stamp: 'joaquin 5/1/2019 03:03'!verificarTemporada: unAno estacion: unaEstacion|res|res:=false.(unAno = ano & unaEstacion = estacion )ifTrue: [ res:=true ].^res.! !!Temporada methodsFor: 'aplicacion' stamp: 'joaquin 5/1/2019 00:06'!verificarPrenda: unTipo talle: unTalle y: unTexto|res|res:=false.colPrendas detect:[:prendaAux | prendaAux compararPrenda: unTipo talle: unTalle  texto: unTexto ] ifFound:[res:=true].^res.! !!Temporada methodsFor: 'modificadores' stamp: 'joaquin 5/1/2019 02:31'!inicializarTemporda: unaEstacion ano: unAno.estacion := unaEstacion .ano:= unAno .colPrendas :=OrderedCollection new.! !!Temporada methodsFor: 'modificadores' stamp: 'joaquin 5/1/2019 02:29'!agregarPrenda: unaPrendacolPrendas add: unaPrenda .! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Temporada class	instanceVariableNames: ''!!Temporada class methodsFor: 'Constructores' stamp: 'joaquin 4/30/2019 20:51'!crear: unaEstacion del: unAno|temporada|temporada := Temporada new.temporada inicializarTemporda: unaEstacion ano: unAno .^temporada .! !Object subclass: #Ubicacion	instanceVariableNames: 'nombre colPrendas colTemporadas'	classVariableNames: ''	poolDictionaries: ''	category: 'TPO2-FAI1629'!!Ubicacion commentStamp: '<historical>' prior: 0!Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:For the Class part:  State a one line summary. For example, "I represent a paragraph of text".For the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.For the Collaborators Part: State my main collaborators and one line about how I interact with them. Public API and Key Messages- message one   - message two - (for bonus points) how to create instances.   One simple example is simply gorgeous. Internal Representation and Key Implementation Points.    Instance Variables	colPrendas:		<Object>	nombre:		<Object>    Implementation Points!!Ubicacion methodsFor: 'aplicacion' stamp: 'joaquin 5/1/2019 18:06'!consultar: unTipo talle: unTalle texto: unTexto ano: unAno estacion: unaEstacion|tempAux res|res:=true.colPrendas detect:[:prendaAux | prendaAux compararPrenda: unTipo talle: unTalle  texto: unTexto]ifFound:[tempAux:=(colTemporadas detect:[:temporadaAux | temporadaAux verificarTemporada: unAno estacion: unaEstacion]ifNone:[nil]). (tempAux notNil)ifTrue:[res:=(tempAux verificarPrenda: unTipo  talle: unTalle  y: unTexto)]]ifNone:[res:=false].^res.! !!Ubicacion methodsFor: 'modificadores' stamp: 'joaquin 4/30/2019 19:24'!agregarPrenda: unaPrendacolPrendas add: unaPrenda .! !!Ubicacion methodsFor: 'modificadores' stamp: 'joaquin 5/1/2019 22:58'!inicializarUbicacion: unNombrenombre := unNombre .colPrendas := OrderedCollection new.colTemporadas := OrderedCollection new.! !!Ubicacion methodsFor: 'modificadores' stamp: 'joaquin 4/30/2019 21:11'!agregarTemporada: unaTemporadacolTemporadas add: unaTemporada .! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Ubicacion class	instanceVariableNames: ''!!Ubicacion class methodsFor: 'constructores' stamp: 'joaquin 4/30/2019 19:15'!crear: unNombre|ubicacion|ubicacion:= Ubicacion new.ubicacion inicializarUbicacion: unNombre.^ubicacion .! !